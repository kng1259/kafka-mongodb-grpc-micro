---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-producer
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    role: producer
spec:
  replicas: {{ .Values.app.replicaCount }}
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
      role: producer
  template:
    metadata:
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
        role: producer
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: producer
        image: "{{ .Values.app.image.registry }}/{{ .Values.app.image.repository_prefix }}-producer:{{ .Values.app.image.tag }}"
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: secret-volume
          readOnly: true
          mountPath: /app/config
        securityContext:
          readOnlyRootFilesystem: true
          runAsUser: 65532
          runAsGroup: 65532
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        resources:
          requests:
            cpu: {{ .Values.app.resources.requests.cpu | default "500m" }}
            memory: {{ .Values.app.resources.requests.memory | default "512Mi" }}
          limits:
            cpu: {{ .Values.app.resources.limits.cpu | default "1" }}
            memory: {{ .Values.app.resources.limits.memory | default "512Mi" }}
      imagePullSecrets: 
      - name: "{{ .Values.app.image.pullSecrets }}"
      volumes:
      - name: secret-volume
        secret:
          secretName: {{ .Release.Name }}-secret

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-consumer
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    role: consumer
spec:
  replicas: {{ .Values.app.replicaCount }}
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
      role: consumer
  template:
    metadata:
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
        role: consumer
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: consumer
        image: "{{ .Values.app.image.registry }}/{{ .Values.app.image.repository_prefix }}-consumer:{{ .Values.app.image.tag }}"
        ports:
        - containerPort: 9080
        volumeMounts:
        - name: secret-volume
          readOnly: true
          mountPath: /app/config
        securityContext:
          readOnlyRootFilesystem: true
          runAsUser: 65532
          runAsGroup: 65532
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        resources:
          requests:
            cpu: {{ .Values.app.resources.requests.cpu | default "500m" }}
            memory: {{ .Values.app.resources.requests.memory | default "512Mi" }}
          limits:
            cpu: {{ .Values.app.resources.limits.cpu | default "1" }}
            memory: {{ .Values.app.resources.limits.memory | default "512Mi" }}
      imagePullSecrets: 
      - name: "{{ .Values.app.image.pullSecrets }}"
      volumes:
      - name: secret-volume
        secret:
          secretName: {{ .Release.Name }}-secret

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-producer-test
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    role: producer-test
spec:
  replicas: {{ .Values.app.replicaCount }}
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
      role: producer-test
  template:
    metadata:
      labels:
        {{- include "common.labels.standard" . | nindent 8 }}
        role: producer-test
    spec:
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: producer-test
        image: "{{ .Values.app.image.registry }}/{{ .Values.app.image.repository_prefix }}-producer:{{ .Values.app.image.tag }}"
        ports:
        - containerPort: 8080
        volumeMounts:
        - name: secret-volume
          readOnly: true
          mountPath: /app/config
        securityContext:
          readOnlyRootFilesystem: true
          runAsUser: 65532
          runAsGroup: 65532
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
        resources:
          requests:
            cpu: {{ .Values.app.resources.requests.cpu | default "500m" }}
            memory: {{ .Values.app.resources.requests.memory | default "512Mi" }}
          limits:
            cpu: {{ .Values.app.resources.limits.cpu | default "1" }}
            memory: {{ .Values.app.resources.limits.memory | default "512Mi" }}
      imagePullSecrets: 
      - name: "{{ .Values.app.image.pullSecrets }}"
      volumes:
      - name: secret-volume
        secret:
          secretName: {{ .Release.Name }}-test-secret