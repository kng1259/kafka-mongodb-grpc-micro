global:
  defaultStorageClass: "longhorn-agent-only"
  security:
    allowInsecureImages: true

app:
  replicaCount: 1
  ingressClassName: cilium
  image:
    registry: poc4k-tsnode1b.ovng.dev.myovcloud.com/docker-main
    repository_prefix: kmgm
    tag: 0.1.0
    pullSecrets: nexus-regcred
  issuer:
    email: kngondajob@gmail.com
  resources:
    requests:
      cpu: 250m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 1Gi

kafka:
  networkPolicy:
    enabled: false
  listeners:
    client:
      containerPort: 9092
      protocol: SASL_PLAINTEXT
      name: CLIENT
    controller:
      name: CONTROLLER
      containerPort: 9093
      protocol: SASL_PLAINTEXT
    interbroker:
      containerPort: 9094
      protocol: SASL_PLAINTEXT
      name: INTERNAL
  sasl:
    client:
      users: ["usera"]
      passwords: ["passb"]
  provisioning:
    enabled: true
    topics:
      - name: products

  controller:
    replicaCount: 3
    persistence:
      enabled: true
      accessModes: [ReadWriteOncePod]
      size: 4Gi
  broker:
    replicaCount: 0
    persistence:
      enabled: true
      accessModes: [ReadWriteOncePod]
      size: 4Gi

  # affinity:
  #   nodeAffinity:
  #     requiredDuringSchedulingIgnoredDuringExecution:
  #       nodeSelectorTerms:
  #       - matchExpressions:
  #         - key: agent
  #           operator: In
  #           values:
  #           - "true"

mongodb:
  architecture: "replicaset"
  resourcesPreset: "medium"
  replicaCount: 1
  image:
    repository: bitnamisecure/mongodb
    tag: latest

  networkPolicy:
    enabled: false

  auth:
    enabled: true
    rootUser: "root"
    rootPassword: "toor"
    usernames: ["usera"]
    passwords: ["passb"]
    databases: ["productdb"]

  # affinity:
  #   nodeAffinity:
  #     requiredDuringSchedulingIgnoredDuringExecution:
  #       nodeSelectorTerms:
  #       - matchExpressions:
  #         - key: agent
  #           operator: In
  #           values:
  #           - "true"

  persistence:
    enabled: true
    accessModes: [ReadWriteOncePod]
    size: 4Gi
  passwordUpdateJob:
    enabled: false
  backup:
    enabled: false
  tls:
    enabled: false
  arbiter:
    enabled: false
  metrics:
    enabled: false
# image:
#   repository: nginx
#   pullPolicy: IfNotPresent
#   tag: ""

# imagePullSecrets: []

# podAnnotations: {}
# podLabels: {}

# podSecurityContext: {}
# securityContext: {}

# resources: {}

# livenessProbe:
#   httpGet:
#     path: /
#     port: http
# readinessProbe:
#   httpGet:
#     path: /
#     port: http

# tolerations: []

# affinity: {}
