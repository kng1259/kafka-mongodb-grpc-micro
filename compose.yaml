services:

  producer:
    build:
      context: ./producer
    container_name: producer
    ports:
      - "8080:8080"
    depends_on:
      kafka:
        condition: service_healthy
        restart: true
      consumer:
        condition: service_started
        restart: true
    restart: unless-stopped
    networks:
      - main
  
  consumer: 
    build:
      context: ./consumer
    container_name: consumer
    ports:
      - "9080:9080"
    depends_on:
      kafka: 
        condition: service_healthy
        restart: true
      mongodb:
        condition: service_healthy
        restart: true
    restart: unless-stopped
    networks:
      - main

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - CLUSTER_ID=""
      - KAFKA_NODE_ID=1
      - KAFKA_PROCESS_ROLES=controller,broker
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: echo "lol"
      interval: 10s
      retries: 25
      start_period: 30s
    networks:
      - main

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8081:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=confluent-kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka
    networks:
      - main
      
  mongodb:
    image: mongo:8.0
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: productdb
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - main

volumes:
  kafka_data:
    driver: local
  mongodb_data:
    driver: local

networks:
  main:
    driver: bridge